<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:dubbo="http://code.alibabatech.com/schema/dubbo" 
	
	
	xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://code.alibabatech.com/schema/dubbo 
		http://code.alibabatech.com/schema/dubbo/dubbo.xsd">
		
		<!-- 注解扫描 -->
		<context:component-scan base-package="com.atguigu.mall.*">
			<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		</context:component-scan>
		
		<!-- 数据库连接 -->
		<context:property-placeholder location="classpath:jdbc.properties"/>
		<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
			<property name="driverClass" value="${jdbc.driver}"></property>
			<property name="jdbcUrl" value="${jdbc.url}"></property>
			<property name="user" value="${jdbc.username}"></property>
			<property name="password" value="${jdbc.password}"></property>
		</bean>

		
		
		
		
		<!-- sqlsession管理 -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		    <property name="configLocation" value="classpath:mybatis-config.xml"></property>
		    <property name="dataSource" ref="dataSource"></property>
		    <property name="mapperLocations">
		        <list>
		            <value>classpath*:mybatis/mapper-*.xml</value>
		        </list>
		    </property>
		</bean>
		
		
		
		
		
		<!-- 扫描Mapper映射配置 -->
		<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="com.atguigu.mall.sale.mapper"/>
		</bean>
		
		<!-- 事务管理器 -->
		<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
			<property name="dataSource" ref="dataSource" />
		</bean>
		<!-- 基于xml方式配置事务 -->
		<!-- 1.配置事务属性 -->
		<tx:advice id="txAdvice" transaction-manager="transactionManager">
			<tx:attributes>
				<tx:method name="*"/>
			</tx:attributes>
		</tx:advice>
		<!-- 2.配合事务切入点 -->
		<aop:config>
			<aop:pointcut expression="execution(* com.atguigu.mall.sale.*.*(..))" id="aoppoint"/>
			<aop:advisor advice-ref="txAdvice" pointcut-ref="aoppoint"/>
		</aop:config>

		<!-- 基于注解方式配置事务 
		<tx:annotation-driven transaction-manager="transactionManager"/>-->
		
		<!-- jms消息工厂 -->
		<bean id="targetConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
			<property name="brokerURL" value="tcp://localhost:61616" />
		</bean>
		<bean id="connectionFactory"
			class="org.springframework.jms.connection.SingleConnectionFactory">
			<!--产生JMS Connection的ConnectionFactory -->
			<property name="targetConnectionFactory" ref="targetConnectionFactory" />
		</bean>
		
		<!-- 执行消息任务的模板 -->
		<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
			<property name="connectionFactory" ref="connectionFactory" />
		</bean>
		<bean id="queueDestination" class="org.apache.activemq.command.ActiveMQQueue">
			<constructor-arg value="logqueue" />
		</bean>
		<bean id="topicDestination" class="org.apache.activemq.command.ActiveMQTopic">
			<constructor-arg value="logtopic" />
		</bean>
		
		
		<!-- 使用dubbo发布服务 -->
		<!-- 提供方应用信息，用于计算依赖关系 -->
		<dubbo:application name="sale_service" />
		<dubbo:registry protocol="zookeeper" address="192.168.79.128:2181" />
		<!-- 用dubbo协议在20880端口暴露服务 -->
		<dubbo:protocol name="dubbo" port="20880" />
		<!-- 声明需要暴露的服务接口 -->
		<dubbo:service interface="com.atguigu.mall.sale.service.AttrService" ref="attrServiceImpl" />
		<dubbo:service interface="com.atguigu.mall.sale.service.LoginService" ref="loginServiceImpl" />
		<dubbo:service interface="com.atguigu.mall.sale.service.OrderService" ref="orderServiceImpl" />
		<dubbo:service interface="com.atguigu.mall.sale.service.ShoppingCartService" ref="shoppingCartServiceImpl" />
		<dubbo:service interface="com.atguigu.mall.sale.service.SkuListService" ref="skuListServiceImpl" />
		
		
		
</beans>